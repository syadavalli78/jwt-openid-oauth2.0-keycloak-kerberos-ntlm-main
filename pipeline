
pipeline {
    agent any 
    stages {

        stage('SCM Preparation') {
            steps {
                echo "BranchName: ${branchName}"
                echo "Code Update Started"
                git branch: "${branchName}", url: 'https://github.com/siddhivinayak-sk/jwt-openid-oauth2.0-keycloak-kerberos-ntlm.git'
                echo "Code Update End"
            }
        }
        
        stage('Clean') {
            steps {
                echo "Clean Started"
                bat(/mvn -file spring-boot-jwt\pom.xml clean/)
                echo "Clean End"
            }
        }

        stage('Compile') {
            steps {
                echo "Code Compilation Started"
                bat(/mvn -file spring-boot-jwt\pom.xml compile/)
                echo "Code Compilation End"
            }
        }
        
        stage('Test') {
            steps {
                echo "Test Started"
                bat(/mvn -file spring-boot-jwt\pom.xml org.jacoco:jacoco-maven-plugin:prepare-agent test -Dmaven.test.failure.ignore=true/)
                echo "Test End"
            }
        }

        stage('Jacoco') {
            steps {
                echo "Jacoco Started"
                jacoco classPattern: '**/target/classes', exclusionPattern: '**/*Test*.class', inclusionPattern: '', sourcePattern: '**/src/main'
                echo "Jacoco End"
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                echo "SonarQube Started"
                withSonarQubeEnv('localSonarQube') {
                    bat(/mvn -file spring-boot-jwt\pom.xml  sonar:sonar  -Dmaven.test.skip=true/)
                }
                echo "SonarQube End"
            }
        }

        stage('Result') {
            steps {
                echo "Result Started"
                junit '**\\spring-boot-jwt\\target\\surefire-reports\\TEST-*.xml'
                echo "Result End"
            }
        }

        stage('Artifact Publish') {
            steps {
                echo "Artifact Publish to Nexus Started"
                bat(/mvn -file spring-boot-jwt\pom.xml  deploy -Dmaven.test.skip=true/)
                echo "Artifact Publish to Nexus Started"
            }
        }
        
        stage('Build Image') {
            steps {
                echo "Build Image Started"
                echo "TODO://"
                echo "Build Image Started"
            }
        }
        
        stage('Tag Image') {
            steps {
                echo "Tag Image Started"
                echo "TODO://"
                echo "Tag Image Started"
            }
        }

        stage('Push Image') {
            steps {
                echo "Push Image Started"
                echo "TODO://"
                echo "Push Image Started"
            }
        }

    }
}
